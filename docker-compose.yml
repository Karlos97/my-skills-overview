services:
  # #  COMMENT HTTPS-PORTAL, FRONTEND AND BACKEND FOR LOCAL DEVELOPMENT!
  https-portal:
    image: steveltn/https-portal:1
    restart: always
    ports:
      - "80:80"
      - "443:443"
    links:
      - backend
      - frontend
    environment:
      DOMAINS: "portfolio.karlos97.pl -> http://frontend:${VITE_FRONTEND_PORT}, portfolio-api.karlos97.pl -> http://backend:${BACKEND_PORT}"
      # STAGE: "production"
      CLIENT_MAX_BODY_SIZE: 25M
      # FORCE_RENEW: "true"
    volumes:
      - https-portal-data:/var/lib/https-portal

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        - VITE_BACKEND_LINK
        - VITE_FRONTEND_PORT
    ports:
      - "${VITE_FRONTEND_PORT}:${VITE_FRONTEND_PORT}"
    depends_on:
      - backend
    restart: always

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        BACKEND_PORT: ${BACKEND_PORT}
        FRONTEND_LINK: ${FRONTEND_LINK}
        NODE_ENV: ${NODE_ENV}
        REDIS_URL: ${REDIS_URL}
        VITE_FRONTEND_PORT: ${VITE_FRONTEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    # volumes:
    #   - "./dockerData/backend_data/logs.json:/backend/logs.json"
    depends_on:
      - postgres
      - redis-container

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - ./dockerData/postgres_data:/var/lib/postgresql/data

  redis-container:
    container_name: redis-container
    image: redis:latest
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  https-portal-data: # Recommended, to avoid re-signing when upgrading HTTPS-PORTAL
