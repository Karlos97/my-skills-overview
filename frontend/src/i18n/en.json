{
  "header": {
    "home": "Home",
    "exampleApp": "Example App",
    "homeShort": "Home",
    "exampleAppShort": "App",
    "chat": "Chat"
  },
  "recordsTable": {
    "header": "Records Table",
    "description-1": "Below you can find the records table and a simple form for adding new ones. The goal of this example was to create a simple part that is present in most applications, i.e. a form for adding data, a place where it is displayed, and the possibility of editing and deleting. The components were created according to ",
    "description-2": ". The form is validated on the frontend and backend. All operations are saved in server logs. In the project, storybook was added on the frontend side and swagger on the backend side for documentation purposes (both technologies are available only in the developers' environment).",
    "loading": " Loading...",
    "error": "Error: ",
    "tableHeaders": {
      "id": "Id",
      "accountNumber": "Account Number",
      "accountName": "Account Name",
      "iban": "IBAN",
      "address": "Address",
      "amount": "Amount",
      "type": "Type",
      "action": "Action"
    },
    "tableNavigation": {
      "showing": "Showing",
      "of": "of",
      "previous": "Previous",
      "next": "Next"
    },
    "noRecords": "This page is empty!",
    "form": {
      "modalFields": {
        "accountNumber": "Account Number",
        "accountName": "Account Name",
        "iban": "IBAN",
        "address": "Address",
        "amount": "Amount",
        "type": "Type",
        "action": "Action",
        "validationSchema": {
          "accountNumberRequired": "Account Number is required",
          "accountNumberDigits": "Account Number must contain only digits",
          "accountNameRequired": "Account Name is required",
          "ibanLength": "IBAN has to have 32 letters",
          "ibanFormat": "IBAN must start with two capital letters followed by up to 30 alphanumeric characters",
          "addressRequired": "Address is required",
          "amountNumber": "Amount must be a number",
          "amountPositive": "Amount must be greater than zero",
          "typeRequired": "Type is required",
          "typeSending": "Sending",
          "typeReceiving": "Receiving",
          "typeUnknown": "Unknown"
        }
      },
      "addForm": {
        "header": "Add record",
        "button": "Add record"
      },
      "editForm": {
        "header": "Edit record",
        "button": "Edit record"
      },
      "removeForm": {
        "header": "Remove record",
        "confirmationHeader": "Are you sure you want to delete record?",
        "button": "Remove Record"
      }
    },
    "addRecordButton": "Add Record"
  },
  "homePage": {
    "header": "Hi there, Iâ€™m",
    "name": "Karol",
    "description": "I was working with clients from Finland, Lithuania, Germany, France and Italy. I previously led installations of industrial machines as a customer, and now, as a technical specialist, I engage directly with clients, providing ongoing technical support and programming services.",
    "projects": {
      "headerPart1": "Recent",
      "headerPart2": "Projects",
      "finelf": {
        "role": "Fullstack Developer",
        "company": "Finelf",
        "description": "Worked on a Credit Ranking App with 2 million annual visitors, improving performance by ~30% in 3 months and enhancing SEO, with a Node.js backend (using MongoDB and PostgreSQL as CMS), hosted on AWS, while also managing the hosting of WordPress sites. Technologies included Swagger, React, MUI, AWS, and others."
      },
      "unikie": {
        "role": "Mid Frontend Developer",
        "company": "Unikie",
        "description": "Worked on a Factory Control App, focused on performance and safety, using React, TypeScript, Sass, Python (for testing), Storybook, Jenkins, DevOps, Kubernetes, Docker, Jira, and BitBucket, with direct client contact. Also contributed to an E-meetings App for remote calls, utilizing React, TypeScript, CSS-in-JS, Formik, RHF, Docker, WebRTC, Three.js, SignalR, WebSockets, REST API, Postman, Swagger, and Azure."
      },
      "privateCustomer": {
        "role": "Fullstack Developer",
        "company": "Private Customer",
        "description": "Developed an e-commerce site for selling clothes, working directly with the client, using Next.js, React, TypeScript, Sass, Tailwind, Docker, DevOps (local servers), Node.js, MongoDB, and REST API."
      },
      "railwaymen": {
        "role": "Jr. Frontend Developer",
        "company": "Railwaymen",
        "description": "Worked on an Accounting App for the UK market and a Time Scheduling App, utilizing React, Sass, TypeScript, RHF, Storybook, Jira, GitLab, HAML, Rails, Emotion, and SCSS."
      },
      "rest": {
        "role": "Automation Branch",
        "company": "",
        "description": "I've spend 5 years in automation branch as automation specialist. I was responsible for automating processes, i.e. writing programs on PLC(programmable logic controllers)."
      }
    }
  },
  "chat": {
    "header": "AI Assistant",
    "description": "AI-powered assistant chat developed using Django, Ollama, and the Mistral language model. Inspired by ChatGPT, the app enables interactive and intuitive conversations with users, providing intelligent and context-aware responses. It combines a robust backend framework with state-of-the-art natural language processing technology to deliver a seamless and engaging user experience.",
    "reminder": "Please keep in mind that this is a Proof of Concept (PoC). It is hosted on a private server with limited resources, so performance may vary. Response times can range from 30 to 60 seconds depending on server load. All DevOps and security configurations were implemented by me from scratch. Thank you for your understanding!",
    "placeholder": "Type your prompt...",
    "chatLabel": "Chat message",
    "send": "Send",
    "assistant": "Assistant",
    "user": "You"
  },
  "footer": {
    "copyrightName": "Karlos97.",
    "copyrightRights": "All rights reserved."
  },
  "atoms": {
    "select": {
      "selectAnOption": "Select an option"
    }
  }
}